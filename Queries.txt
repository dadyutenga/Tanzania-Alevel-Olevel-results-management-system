the  sql  for fetchjinf  the   data   for the    and the  subjects  



SELECT 
    s.id AS student_id,
    CONCAT(s.firstname, ' ', COALESCE(s.middlename, ''), ' ', s.lastname) AS full_name,
    c.class AS class_name,
    cs.section_id AS section,
    te.exam_name,
    tes.subject_name,
    tesm.marks_obtained
FROM 
    students s
INNER JOIN 
    student_session ss ON s.id = ss.student_id
INNER JOIN 
    classes c ON ss.class_id = c.id
INNER JOIN 
    class_sections cs ON ss.section_id = cs.section_id AND ss.class_id = cs.class_id
INNER JOIN 
    tz_exam_classes tec ON tec.class_id = ss.class_id AND tec.session_id = ss.session_id
INNER JOIN 
    tz_exams te ON te.id = tec.exam_id
INNER JOIN 
    tz_exam_subjects tes ON tes.exam_id = te.id
LEFT JOIN  
    tz_exam_subject_marks tesm ON tesm.student_id = s.id 
                              AND tesm.exam_subject_id = tes.id
                              AND tesm.exam_id = te.id
                              AND tesm.class_id = ss.class_id
WHERE 
    ss.class_id = 1
    AND ss.section_id = 1
    AND ss.session_id = 19
    AND s.is_active = 'yes'
    AND te.is_active = 'yes'
ORDER BY 
    full_name, te.exam_name, tes.subject_name;




the script   for  fetching  form  the table s  of  student   and    subject  ,  subject_marks  and  exams  



    SELECT 
    s.id AS student_id,
    CONCAT(s.firstname, ' ', COALESCE(s.middlename, ''), ' ', s.lastname) AS full_name,
    c.class AS class_name,
    cs.section_id AS section,
    te.exam_name,
    ter.total_points,
    ter.division,
    ter.division_description
FROM 
    students s
INNER JOIN student_session ss ON s.id = ss.student_id
INNER JOIN classes c ON ss.class_id = c.id
INNER JOIN class_sections cs ON ss.section_id = cs.section_id AND ss.class_id = cs.class_id
INNER JOIN tz_exam_classes tec ON tec.class_id = ss.class_id AND tec.session_id = ss.session_id
INNER JOIN tz_exams te ON te.id = tec.exam_id
INNER JOIN tz_exam_results ter ON ter.student_id = s.id 
                               AND ter.exam_id = te.id
                               AND ter.class_id = ss.class_id
                               AND ter.session_id = ss.session_id
WHERE 
    ss.class_id = 1
    AND ss.session_id = 19
    AND s.is_active = 'yes'
    AND te.is_active = 'yes'
ORDER BY 
    full_name,
    te.exam_name;



THE  sql   schema   creation   script  is   for  fetching  data  from  the  database  and  displaying  it  in  a  table  format.



the   process   outline  


SELECT 
    e.id AS exam_id,
    e.exam_name,
    e.exam_date,
    e.is_active,
    ec.class_id,
    c.class AS class_name
FROM 
    tz_exams e
JOIN 
    tz_exam_classes ec ON e.id = ec.exam_id
JOIN 
    classes c ON ec.class_id = c.id
WHERE 
    e.session_id = 19
    AND ec.class_id = 1
    AND e.is_active = 'yes'
ORDER BY 
    e.exam_date DESC;

FETCHING  THE  DATA  





SELECT 
    s.id AS student_id,
    CONCAT(s.firstname, ' ', COALESCE(s.middlename, ''), ' ', s.lastname) AS full_name,
    c.class AS class_name,
    te.exam_name,
    ter.total_points,
    ter.division
FROM 
    students s
INNER JOIN student_session ss ON s.id = ss.student_id
INNER JOIN classes c ON ss.class_id = c.id
INNER JOIN class_sections cs ON ss.section_id = cs.section_id AND ss.class_id = cs.class_id
INNER JOIN tz_exam_classes tec ON tec.class_id = ss.class_id AND tec.session_id = ss.session_id
INNER JOIN tz_exams te ON te.id = tec.exam_id
INNER JOIN tz_exam_results ter ON ter.student_id = s.id 
                               AND ter.exam_id = te.id
                               AND ter.class_id = ss.class_id
                               AND ter.session_id = ss.session_id
WHERE 
    ss.class_id = 1
    AND ss.session_id = 19
    AND ss.section_id = 1  -- Section filter remains active
    AND s.is_active = 'yes'
    AND te.is_active = 'yes'
ORDER BY 
    full_name,
    te.exam_name;



ama  using  session filtering  


the  query  

SELECT 
    s.id AS student_id,
    CONCAT(s.firstname, ' ', COALESCE(s.middlename, ''), ' ', s.lastname) AS student_name,
    c.class AS class_name,
    sec.section AS section_name,
    sess.session AS session_name,
    ac.combination_code,
    ac.combination_name,
    acs.subject_name AS combination_subject,
    acs.subject_type AS subject_type,
    e.exam_name,
    e.exam_date,
    es.subject_name AS exam_subject,
    esm.marks_obtained,
    es.max_marks,
    es.passing_marks
FROM 
    students s
    INNER JOIN student_session ss ON s.id = ss.student_id
    INNER JOIN classes c ON ss.class_id = c.id
    LEFT JOIN sections sec ON ss.section_id = sec.id
    INNER JOIN sessions sess ON ss.session_id = sess.id
    INNER JOIN tz_student_alevel_combinations sac ON 
        sac.class_id = ss.class_id 
        AND (sac.section_id = ss.section_id OR sac.section_id IS NULL)
        AND sac.session_id = ss.session_id
    INNER JOIN tz_alevel_combinations ac ON sac.combination_id = ac.id
    INNER JOIN tz_alevel_combination_subjects acs ON ac.id = acs.combination_id
    LEFT JOIN tz_alevel_exam_combinations aec ON 
        aec.combination_id = ac.id 
        AND aec.class_id = c.id 
        AND aec.session_id = sess.id
    LEFT JOIN tz_exams e ON aec.exam_id = e.id
    LEFT JOIN tz_exam_subjects es ON e.id = es.exam_id
    LEFT JOIN tz_exam_subject_marks esm ON 
        esm.exam_id = e.id 
        AND esm.student_id = s.id 
        AND esm.class_id = c.id 
        AND esm.session_id = sess.id 
        AND esm.exam_subject_id = es.id
WHERE 
    s.is_active = 'yes'
    AND ss.is_active = 'no'
    AND c.is_active = 'no'
    AND sess.is_active = 'no'
    AND ac.is_active = 'yes'
    AND acs.is_active = 'yes'
    AND (aec.is_active = 'yes' OR aec.is_active IS NULL)
    AND (e.is_active = 'yes' OR e.is_active IS NULL)
ORDER BY 
    s.id, 
    ac.combination_code, 
    acs.subject_name, 
    e.exam_name;